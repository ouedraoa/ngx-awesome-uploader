{"version":3,"file":"ngx-awesome-uploader.mjs","sources":["../../../projects/file-picker/src/lib/file-picker.service.ts","../../../projects/file-picker/src/lib/file-upload.utils.ts","../../../projects/file-picker/src/lib/validation-error.model.ts","../../../projects/file-picker/src/lib/default-captions.ts","../../../projects/file-picker/src/lib/file-picker.constants.ts","../../../projects/file-picker/src/lib/services/file-validator/file-validator.service.ts","../../../projects/file-picker/src/lib/file-drop/upload-file.model.ts","../../../projects/file-picker/src/lib/file-drop/upload-event.model.ts","../../../projects/file-picker/src/lib/icons/cloud-icon/cloud-icon.component.ts","../../../projects/file-picker/src/lib/icons/cloud-icon/cloud-icon.component.html","../../../projects/file-picker/src/lib/file-drop/file-drop.component.ts","../../../projects/file-picker/src/lib/file-drop/file-drop.component.html","../../../projects/file-picker/src/lib/file-picker.adapter.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/refresh-icon/refresh-icon.component.html","../../../projects/file-picker/src/lib/icons/close-icon/close-icon.component.ts","../../../projects/file-picker/src/lib/icons/close-icon/close-icon.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/file-preview-item.component.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-item/file-preview-item.component.html","../../../projects/file-picker/src/lib/file-preview-container/preview-lightbox/preview-lightbox.component.ts","../../../projects/file-picker/src/lib/file-preview-container/preview-lightbox/preview-lightbox.component.html","../../../projects/file-picker/src/lib/file-preview-container/file-preview-container.component.ts","../../../projects/file-picker/src/lib/file-preview-container/file-preview-container.component.html","../../../projects/file-picker/src/lib/file-picker.component.ts","../../../projects/file-picker/src/lib/file-picker.component.html","../../../projects/file-picker/src/lib/file-drop/file-drop.module.ts","../../../projects/file-picker/src/lib/file-picker.module.ts","../../../projects/file-picker/src/public_api.ts","../../../projects/file-picker/src/ngx-awesome-uploader.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Injectable()\nexport class FilePickerService {\n  constructor(private sanitizer: DomSanitizer) { }\n  mockUploadFile(formData): Observable<any> {\n    const event = new CustomEvent('customevent', {\n      detail: {\n        type: 'UploadProgreess'\n      }\n    });\n    return of (event.detail);\n  }\n\n  // @ts-ignore: Not all code paths return a value\n  createSafeUrl(file): SafeResourceUrl {\n    try {\n      const url = window.URL.createObjectURL(file);\n      const safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n      return safeUrl;\n    } catch (er) {\n      console.log(er);\n    }\n  }\n}\n","export function GET_FILE_CATEGORY_TYPE(fileExtension: string): string {\n  if (fileExtension.includes('image')) {\n    return 'image';\n  } else if (fileExtension.includes('video')) {\n    return 'video';\n  } else {\n    return 'other';\n  }\n}\n\nexport function GET_FILE_TYPE(name: string): string {\n  return name.split('.').pop().toUpperCase();\n}\n\nexport function IS_IMAGE_FILE(fileType: string): boolean {\n  const IMAGE_TYPES = ['PNG', 'JPG', 'JPEG', 'BMP', 'WEBP', 'JFIF', 'TIFF'];\n  return (IMAGE_TYPES as any).includes(fileType.toUpperCase());\n}\n","export interface ValidationError {\n  file: File;\n  error: string; // is FileValidationType enum type\n}\nexport enum FileValidationTypes {\n  fileMaxSize = 'FILE_MAX_SIZE',\n  fileMaxCount = 'FILE_MAX_COUNT',\n  totalMaxSize = 'TOTAL_MAX_SIZE',\n  extensions = 'EXTENSIONS',\n  uploadType = 'UPLOAD_TYPE',\n  customValidator = 'CUSTOM_VALIDATOR'\n}\n","import { UploaderCaptions } from './uploader-captions';\n\nexport const DefaultCaptions: UploaderCaptions = {\n    dropzone: {\n        title: 'Drag and drop file here',\n        or: 'or',\n        browse: 'Browse Files'\n    },\n    cropper: {\n        crop: 'Crop',\n        cancel: 'Cancel'\n    },\n    previewCard: {\n        remove: 'Remove',\n        uploadError: 'Error on upload'\n    }\n};\n","export const DEFAULT_CROPPER_OPTIONS = {\n    dragMode: 'crop',\n    aspectRatio: 1,\n    autoCrop: true,\n    movable: true,\n    zoomable: true,\n    scalable: true,\n    autoCropArea: 0.8\n};\n\nexport function bitsToMB(size: number): number {\n   return parseFloat(size.toString()) / 1048576;\n}\n","import { Injectable } from '@angular/core';\nimport { bitsToMB } from '../../file-picker.constants';\nimport { FilePreviewModel } from '../../file-preview.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileValidatorService {\n\n  constructor() { }\n\n  /** Validates file extension */\n  public isValidExtension(fileName: string, fileExtensions: string[]): boolean {\n    if (!fileExtensions?.length) { return true; }\n\n    const extension: string = fileName.split('.').pop();\n    const fileExtensionsLowercase = fileExtensions.map(ext => ext.toLowerCase());\n    if (fileExtensionsLowercase.indexOf(extension.toLowerCase()) === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /** Validates if upload type is single so another file cannot be added */\n  public isValidUploadType(files: FilePreviewModel[], uploadType: string): boolean {\n    if (uploadType === 'single' && files?.length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** Validates max file count */\n  public isValidMaxFileCount(fileMaxCount: number, newFiles: File[], files: FilePreviewModel[]): boolean {\n    if (!fileMaxCount || fileMaxCount >= files?.length + newFiles?.length) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public isValidFileSize(size: number, fileMaxSize: number) {\n    const fileMB: number = bitsToMB(size);\n    if (!fileMaxSize || (fileMaxSize && fileMB < fileMaxSize)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public isValidTotalFileSize(newFile: File, files: FilePreviewModel[], totalMaxSize: number) {\n    /** Validating Total Files Size */\n    const totalBits = files\n      .map(f => f.file ? f.file.size : 0)\n      .reduce((acc, curr) => acc + curr, 0);\n\n    if (!totalMaxSize || (totalMaxSize && bitsToMB(totalBits + newFile.size) < totalMaxSize)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { FileSystemEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from './dom.types';\n\n/**\n * fileEntry is an instance of {@link FileSystemFileEntry} or {@link FileSystemDirectoryEntry}.\n * Which one is it can be checked using {@link FileSystemEntry.isFile} or {@link FileSystemEntry.isDirectory}\n * properties of the given {@link FileSystemEntry}.\n */\nexport class UploadFile {\n    constructor(\n        public relativePath: string,\n        public fileEntry: FileSystemEntry) {\n    }\n}\n","import { UploadFile } from './upload-file.model';\n\nexport class UploadEvent {\n    constructor(\n        public files: UploadFile[]) {\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'cloud-icon',\n    templateUrl: './cloud-icon.component.html',\n    styleUrls: ['./cloud-icon.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class CloudIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","    <!-- <div class=\"cloud-upload-icon\"><i></i></div> -->\n\n    <svg class=\"svg-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"42px\" height=\"42px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"/>\n    </svg>","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { timer, Subscription } from 'rxjs';\n\nimport { UploadFile } from './upload-file.model';\nimport { UploadEvent } from './upload-event.model';\nimport {\n  FileSystemFileEntry,\n  FileSystemEntry,\n  FileSystemDirectoryEntry\n} from './dom.types';\nimport { UploaderCaptions } from '../uploader-captions';\n\n@Component({\n    selector: 'file-drop',\n    templateUrl: './file-drop.component.html',\n    styleUrls: ['./file-drop.component.scss'],\n    standalone: false\n})\nexport class FileComponent implements OnDestroy {\n  @Input()\n  captions: UploaderCaptions;\n  @Input()\n  customstyle: string = null;\n  @Input()\n  disableIf = false;\n\n  @Output()\n  public onFileDrop: EventEmitter<UploadEvent> = new EventEmitter<UploadEvent>();\n  @Output()\n  public onFileOver: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  public onFileLeave: EventEmitter<any> = new EventEmitter<any>();\n\n  stack = [];\n  files: UploadFile[] = [];\n  subscription: Subscription;\n  dragoverflag = false;\n\n  globalDisable = false;\n  globalStart: () => void;\n  globalEnd: () => void;\n\n  numOfActiveReadEntries = 0;\n  constructor(private zone: NgZone, private renderer: Renderer2) {\n    if (!this.customstyle) {\n      this.customstyle = 'drop-zone';\n    }\n    this.globalStart = this.renderer.listen('document', 'dragstart', evt => {\n      this.globalDisable = true;\n    });\n    this.globalEnd = this.renderer.listen('document', 'dragend', evt => {\n      this.globalDisable = false;\n    });\n  }\n  public onDragOver(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (!this.dragoverflag) {\n        this.dragoverflag = true;\n        this.onFileOver.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  public onDragLeave(event: Event): void {\n    if (!this.globalDisable && !this.disableIf) {\n      if (this.dragoverflag) {\n        this.dragoverflag = false;\n        this.onFileLeave.emit(event);\n      }\n      this.preventAndStop(event);\n    }\n  }\n\n  dropFiles(event: any) {\n    if (!this.globalDisable && !this.disableIf) {\n      this.dragoverflag = false;\n      event.dataTransfer.dropEffect = 'copy';\n      let length;\n      if (event.dataTransfer.items) {\n        length = event.dataTransfer.items.length;\n      } else {\n        length = event.dataTransfer.files.length;\n      }\n\n      for (let i = 0; i < length; i++) {\n        let entry: FileSystemEntry;\n        if (event.dataTransfer.items) {\n          if (event.dataTransfer.items[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.items[i].webkitGetAsEntry();\n          }\n        } else {\n          if (event.dataTransfer.files[i].webkitGetAsEntry) {\n            entry = event.dataTransfer.files[i].webkitGetAsEntry();\n          }\n        }\n        if (!entry) {\n          const file: File = event.dataTransfer.files[i];\n          if (file) {\n            const fakeFileEntry: FileSystemFileEntry = {\n              name: file.name,\n              isDirectory: false,\n              isFile: true,\n              file: (callback: (filea: File) => void): void => {\n                callback(file);\n              }\n            };\n            const toUpload: UploadFile = new UploadFile(\n              fakeFileEntry.name,\n              fakeFileEntry\n            );\n            this.addToQueue(toUpload);\n          }\n        } else {\n          if (entry.isFile) {\n            const toUpload: UploadFile = new UploadFile(entry.name, entry);\n            this.addToQueue(toUpload);\n          } else if (entry.isDirectory) {\n            this.traverseFileTree(entry, entry.name);\n          }\n        }\n      }\n\n      this.preventAndStop(event);\n\n      const timerObservable = timer(200, 200);\n      this.subscription = timerObservable.subscribe(t => {\n        if (this.files.length > 0 && this.numOfActiveReadEntries === 0) {\n          this.onFileDrop.emit(new UploadEvent(this.files));\n          this.files = [];\n        }\n      });\n    }\n  }\n\n  private traverseFileTree(item: FileSystemEntry, path: string) {\n    if (item.isFile) {\n      const toUpload: UploadFile = new UploadFile(path, item);\n      this.files.push(toUpload);\n      this.zone.run(() => {\n        this.popToStack();\n      });\n    } else {\n      this.pushToStack(path);\n      path = path + '/';\n      const dirReader = (item as FileSystemDirectoryEntry).createReader();\n      let entries = [];\n      const thisObj = this;\n\n      const readEntries = () => {\n        thisObj.numOfActiveReadEntries++;\n        dirReader.readEntries((res) => {\n          if (!res.length) {\n            // add empty folders\n            if (entries.length === 0) {\n              const toUpload: UploadFile = new UploadFile(path, item);\n              thisObj.zone.run(() => {\n                thisObj.addToQueue(toUpload);\n              });\n            } else {\n              for (let i = 0; i < entries.length; i++) {\n                thisObj.zone.run(() => {\n                  thisObj.traverseFileTree(entries[i], path + entries[i].name);\n                });\n              }\n            }\n            thisObj.zone.run(() => {\n              thisObj.popToStack();\n            });\n          } else {\n            // continue with the reading\n            entries = entries.concat(res);\n            readEntries();\n          }\n          thisObj.numOfActiveReadEntries--;\n        });\n      };\n\n      readEntries();\n    }\n  }\n\n  private addToQueue(item: UploadFile) {\n    this.files.push(item);\n  }\n\n  pushToStack(str) {\n    this.stack.push(str);\n  }\n\n  popToStack() {\n    const value = this.stack.pop();\n  }\n\n  private clearQueue() {\n    this.files = [];\n  }\n\n  private preventAndStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.globalStart();\n    this.globalEnd();\n  }\n}\n","<div id=\"dropZone\"  [className]=\"customstyle\" [class.over]=\"dragoverflag\"\n    (drop)=\"dropFiles($event)\"\n    (dragover)=\"onDragOver($event)\" (dragleave)=\"onDragLeave($event)\">\n\n    <div #ref class=\"custom-dropzone\" >\n      <ng-content></ng-content>\n      </div>\n\n    <div class=\"content\" *ngIf=\"ref.children?.length == 0\">\n             <cloud-icon class=\"cloud-icon\"></cloud-icon>\n              <div class=\"content-top-text\">\n                {{captions?.dropzone?.title}}\n              </div>\n              <div class=\"content-center-text\">\n                {{captions?.dropzone?.or}}\n              </div>\n              <button class=\"file-browse-button\" type=\"button\">\n                {{captions?.dropzone?.browse}}\n              </button>\n    </div>\n</div>\n","import { FilePreviewModel } from './file-preview.model';\nimport { Observable } from 'rxjs';\n\nexport interface UploadResponse {\n    body?: any;\n    status: UploadStatus;\n    progress?: number;\n}\n\nexport enum UploadStatus {\n   UPLOADED = 'UPLOADED',\n   IN_PROGRESS = 'IN PROGRESS',\n   ERROR = 'ERROR'\n}\n\nexport abstract class FilePickerAdapter {\n public abstract uploadFile(fileItem: FilePreviewModel): Observable<UploadResponse | undefined>;\n public abstract removeFile(fileItem: FilePreviewModel): Observable<any>;\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n    selector: 'refresh-icon',\n    templateUrl: './refresh-icon.component.html',\n    styleUrls: ['./refresh-icon.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class RefreshIconComponent {\n\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/>\n</svg>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'close-icon',\n    templateUrl: './close-icon.component.html',\n    styleUrls: ['./close-icon.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class CloseIconComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\n width=\"18px\" height=\"18px\">\n <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n</svg>","import { FilePickerService } from './../../file-picker.service';\nimport { FilePreviewModel } from './../../file-preview.model';\nimport { Component, OnInit, Input, Output, EventEmitter, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { GET_FILE_CATEGORY_TYPE, GET_FILE_TYPE, IS_IMAGE_FILE } from '../../file-upload.utils';\nimport {  Subscription } from 'rxjs';\nimport { FilePickerAdapter, UploadResponse, UploadStatus } from '../../file-picker.adapter';\nimport { UploaderCaptions } from '../../uploader-captions';\n\n@Component({\n    selector: 'file-preview-item',\n    templateUrl: './file-preview-item.component.html',\n    styleUrls: ['./file-preview-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class FilePreviewItemComponent implements OnInit {\n  @Output() public readonly removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  @Output() public readonly imageClicked = new EventEmitter<FilePreviewModel>();\n  @Input() public fileItem: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() captions: UploaderCaptions;\n  @Input() enableAutoUpload: boolean;\n  public uploadProgress: number;\n  public isImageFile: boolean;\n  public fileType: string;\n  public safeUrl: SafeResourceUrl;\n  public uploadError: boolean;\n  public uploadResponse: any;\n  private _uploadSubscription: Subscription;\n  constructor(\n    private fileService: FilePickerService,\n    private changeRef: ChangeDetectorRef\n  ) {}\n\n  public ngOnInit() {\n    if (this.fileItem.file) {\n      this._uploadFile(this.fileItem);\n      this.safeUrl = this.getSafeUrl(this.fileItem.file);\n    }\n    this.fileType = GET_FILE_TYPE(this.fileItem.fileName);\n    this.isImageFile = IS_IMAGE_FILE(this.fileType);\n  }\n\n  public getSafeUrl(file: File | Blob): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n  /** Converts bytes to nice size */\n  public niceBytes(x): string {\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let l = 0;\n    let n = parseInt(x, 10) || 0;\n    while (n >= 1024 && ++l) {\n      n = n / 1024;\n    }\n    // include a decimal point and a tenths-place digit if presenting\n    // less than ten of KB or greater units\n    return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n  }\n  /** Retry file upload when upload was unsuccessfull */\n  public onRetry(): void {\n    this.uploadError = undefined;\n    this._uploadFile(this.fileItem);\n  }\n\n  public onRemove(fileItem: FilePreviewModel): void {\n    this._uploadUnsubscribe();\n    this.removeFile.next({\n      ...fileItem,\n      uploadResponse: this.uploadResponse || fileItem.uploadResponse\n    });\n   }\n\n  private _uploadFile(fileItem: FilePreviewModel): void {\n    if (!this.enableAutoUpload) {\n      return;\n    }\n    if (this.adapter) {\n      this._uploadSubscription =\n      this.adapter.uploadFile(fileItem)\n      .subscribe((res: UploadResponse) => {\n        if (res && res.status === UploadStatus.UPLOADED) {\n          this._onUploadSuccess(res.body, fileItem);\n          this.uploadProgress = undefined;\n        }\n        if (res && res.status === UploadStatus.IN_PROGRESS) {\n          this.uploadProgress = res.progress;\n          this.changeRef.detectChanges();\n        }\n        if (res && res.status === UploadStatus.ERROR) {\n          this.uploadError = true;\n          this.uploadFail.next(res.body);\n          this.uploadProgress = undefined;\n        }\n        this.changeRef.detectChanges();\n      }, (er: HttpErrorResponse) => {\n        this.uploadError = true;\n        this.uploadFail.next(er);\n        this.uploadProgress = undefined;\n        this.changeRef.detectChanges();\n  });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n  /** Emits event when file upload api returns success  */\n  private _onUploadSuccess(uploadResponse: any, fileItem: FilePreviewModel): void {\n    this.uploadResponse = uploadResponse;\n    this.fileItem.uploadResponse = uploadResponse;\n    this.uploadSuccess.next({...fileItem, uploadResponse});\n  }\n\n /** Cancel upload. Cancels request  */\n private _uploadUnsubscribe(): void {\n  if (this._uploadSubscription) {\n    this._uploadSubscription.unsubscribe();\n   }\n }\n\n}\n","    <div class=\"file-preview-wrapper\" *ngIf=\"fileItem\" [ngClass] = \"{'visually-hidden': itemTemplate}\">\n\n\n        <div class=\"file-preview-thumbnail\">\n          <div class=\"img-preview-thumbnail\" *ngIf=\"isImageFile && fileItem?.file\" >\n            <img [src]=\"safeUrl\" (click)=\"imageClicked.next(fileItem)\">\n          </div>\n          <div class=\"other-preview-thumbnail\"\n            *ngIf=\"!isImageFile || !fileItem?.file\"\n            [ngClass]=\"fileItem.fileName.split('.').pop()\"\n            >\n            {{fileType}}\n          </div>\n          <div class=\"thumbnail-backdrop\">\n\n          </div>\n        </div>\n        <div class=\"file-preview-description\" >\n          <a class=\"file-preview-title\" [title]=\"fileItem.fileName\" href=\"javascript:void(0)\"><p>{{fileItem.fileName}}</p></a>\n          <div class=\"file-preview-size\" *ngIf=\"fileItem?.file\">{{niceBytes(fileItem.file?.size)}}</div>\n        </div>\n        <div class=\"file-preview-actions\" >\n            <div class=\"ngx-checkmark-wrapper\" *ngIf=\"!uploadError && !uploadProgress && fileItem?.file\">\n              <span class=\"ngx-checkmark\"></span>\n            </div>\n            <refresh-icon *ngIf=\"uploadError\" (click)=\"onRetry()\"></refresh-icon>\n            <a class=\"ngx-close-icon-wrapper\"\n            (click)=\"onRemove(fileItem)\"\n             title=\"{{captions?.previewCard?.remove}}\"\n             >\n              <close-icon class=\"ngx-close-icon\"></close-icon>\n            </a>\n        </div>\n          <a class=\"file-upload-error-wrapper\" *ngIf=\"uploadError && !uploadProgress\" href=\"javascipt:void(0)\"\n          title=\"{{captions?.previewCard?.uploadError}}\">\n          </a>\n\n        <ng-container *ngIf=\"uploadProgress\">\n        <div class=\"file-upload-progress-bar-wrapper\"  >\n          <div class=\"file-upload-progress-bar\"  [ngStyle]=\"{ 'width': uploadProgress + '%' }\">\n          </div>\n        </div>\n\n        <div class=\"file-upload-percentage-wrapper\" >\n          <div class=\"file-upload-percentage\">{{uploadProgress}} %</div>\n          </div>\n        </ng-container>\n\n      </div>\n\n<ng-container *ngTemplateOutlet=\"itemTemplate;context: {fileItem: fileItem, uploadProgress: uploadProgress}\" > </ng-container>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { FilePreviewModel } from '../../file-preview.model';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n    selector: 'preview-lightbox',\n    templateUrl: './preview-lightbox.component.html',\n    styleUrls: ['./preview-lightbox.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class PreviewLightboxComponent implements OnInit {\n  @Input() file: FilePreviewModel;\n  @Output() previewClose = new EventEmitter<void>();\n  loaded: boolean;\n  safeUrl: SafeResourceUrl;\n  constructor(private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.getSafeUrl(this.file.file);\n  }\n  public getSafeUrl(file: File | Blob): void {\n    const url = window.URL.createObjectURL(file);\n    this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n  public onClose(event): void {\n   this.previewClose.next();\n  }\n\n}\n","<div class=\"ng-modal-backdrop\" (click)=\"onClose($event)\">\n\n</div>\n\n<div class=\"ng-modal-content\" >\n  <div class=\"close-icon-wrapper\" (click)=\"onClose($event)\">\n      <close-icon></close-icon>\n  </div>\n  <div class=\"lightbox-item\" >\n    <img [src]=\"safeUrl\" (load)=\"loaded = true\" [ngStyle]=\"{'visibility': loaded ? 'visible' : 'hidden'}\">\n  </div>\n </div>\n","import { Component, OnInit, Input, Output, EventEmitter, TemplateRef, ChangeDetectionStrategy } from '@angular/core';\nimport { FilePreviewModel } from '../file-preview.model';\nimport { FilePickerAdapter } from '../file-picker.adapter';\nimport { UploaderCaptions } from '../uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n    selector: 'file-preview-container',\n    templateUrl: './file-preview-container.component.html',\n    styleUrls: ['./file-preview-container.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class FilePreviewContainerComponent implements OnInit {\n  @Input() previewFiles: FilePreviewModel[];\n  @Input() itemTemplate: TemplateRef<any>;\n  @Input() enableAutoUpload: boolean;\n  @Output() public readonly removeFile = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  @Output() public readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  public lightboxFile: FilePreviewModel;\n  @Input() adapter: FilePickerAdapter;\n  @Input() captions: UploaderCaptions;\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public openLightbox(file: FilePreviewModel): void {\n   this.lightboxFile = file;\n  }\n\n  public closeLightbox(): void {\n    this.lightboxFile = undefined;\n  }\n\n}\n","<preview-lightbox *ngIf=\"lightboxFile\" [file]=\"lightboxFile\" (previewClose)=\"closeLightbox()\"></preview-lightbox>\n<file-preview-item\n    *ngFor=\"let file of previewFiles\"\n    [fileItem]=\"file\"\n    (removeFile)=\"removeFile.next($event)\"\n    (uploadSuccess)=\"uploadSuccess.next($event)\"\n    (uploadFail)=\"uploadFail.next($event)\"\n    (imageClicked)=\"openLightbox($event)\"\n    [itemTemplate]=\"itemTemplate\"\n    [adapter]=\"adapter\"\n    [captions]=\"captions\"\n    [enableAutoUpload]=\"enableAutoUpload\"\n></file-preview-item>\n","import { FilePickerService } from './file-picker.service';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter, inject, Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output, runInInjectionContext,\n  TemplateRef\n} from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { FilePreviewModel } from './file-preview.model';\nimport { GET_FILE_CATEGORY_TYPE } from './file-upload.utils';\nimport { FileValidationTypes, ValidationError } from './validation-error.model';\nimport { FilePickerAdapter } from './file-picker.adapter';\nimport {\n  FileSystemDirectoryEntry,\n  FileSystemFileEntry,\n  UploadEvent\n} from './file-drop';\nimport { bufferCount, combineLatest, Observable, of, Subject, switchMap} from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DefaultCaptions } from './default-captions';\nimport { UploaderCaptions } from './uploader-captions';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { DEFAULT_CROPPER_OPTIONS } from './file-picker.constants';\nimport { lookup } from 'mrmime';\nimport { FileValidatorService } from './services/file-validator/file-validator.service';\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\n\n\ndeclare var Cropper;\n@Component({\n    selector: 'ngx-awesome-uploader',\n    templateUrl: './file-picker.component.html',\n    styleUrls: ['./file-picker.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: false\n})\nexport class FilePickerComponent implements OnInit, OnDestroy {\n  /** Emitted when file upload via api successfully. Emitted for every file */\n  @Output() readonly uploadSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file upload via api failed. Emitted for every file */\n  @Output() readonly uploadFail = new EventEmitter<HttpErrorResponse>();\n  /** Emitted when file is removed via api successfully. Emitted for every file */\n  @Output() readonly removeSuccess = new EventEmitter<FilePreviewModel>();\n  /** Emitted on file validation fail */\n  @Output() readonly validationError = new EventEmitter<ValidationError>();\n  /** Emitted when file is added and passed validations. Not uploaded yet */\n  @Output() readonly fileAdded = new EventEmitter<FilePreviewModel>();\n  /** Emitted when file is removed from fileList */\n  @Output() readonly fileRemoved = new EventEmitter<FilePreviewModel>();\n  /** Custom validator function */\n  @Input() customValidator: (file: File) => Observable<boolean>;\n  /** Whether to enable cropper. Default: disabled */\n  @Input() enableCropper = false;\n  /** Whether to show default drag and drop zone. Default:true */\n  @Input() showeDragDropZone = true;\n  /** Whether to show default files preview container. Default: true */\n  @Input() showPreviewContainer = true;\n  /** Preview Item template */\n  @Input() itemTemplate: TemplateRef<any>;\n  /** Single or multiple. Default: multi */\n  @Input() uploadType = 'multi';\n  /** Max size of selected file in MB. Default: no limit */\n  @Input() fileMaxSize: number;\n  /** Max count of file in multi-upload. Default: no limit */\n  @Input() fileMaxCount: number;\n  /** Total Max size limit of all files in MB. Default: no limit */\n  @Input() totalMaxSize: number;\n  /** Which file types to show on choose file dialog. Default: show all */\n  @Input() accept: string;\n  /** File extensions filter */\n  @Input() fileExtensions: string[];\n  /** Cropper options. */\n  @Input() cropperOptions: object;\n  /** Cropped canvas options. */\n  @Input() croppedCanvasOptions: object = {};\n  /** Custom api Adapter for uploading/removing files */\n  @Input() adapter: FilePickerAdapter;\n  /**  Custome template for dropzone */\n  @Input() dropzoneTemplate: TemplateRef<any>;\n  /** Custom captions input. Used for multi language support */\n  @Input() captions: UploaderCaptions = DefaultCaptions;\n  /** captions object */\n  /** Whether to auto upload file on file choose or not. Default: true */\n  @Input() enableAutoUpload = true;\n\n  /** capture paramerter for file input such as user,environment*/\n  @Input() fileInputCapture: string;\n\n  cropper: any;\n  public files: FilePreviewModel[] = [];\n  /** Files array for cropper. Will be shown equentially if crop enabled */\n  filesForCropper: File[] = [];\n  /** Current file to be shown in cropper */\n  public currentCropperFile: File;\n  public safeCropImgUrl: SafeResourceUrl;\n  public isCroppingBusy: boolean;\n\n  private _cropClosed$ = new Subject<FilePreviewModel>();\n  private _onDestroy$ = new Subject<void>();\n  private readonly injector = inject(Injector);\n\n  constructor(\n    private readonly fileService: FilePickerService,\n    private readonly fileValidatorService: FileValidatorService,\n    private readonly changeRef: ChangeDetectorRef\n  ) {}\n\n  public ngOnInit(): void {\n    this._setCropperOptions();\n    this._listenToCropClose();\n  }\n\n  public ngOnDestroy(): void {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n\n  /** On input file selected */\n  // TODO: fix any\n  public onChange(event: any): void {\n    const files: File[] = Array.from(event);\n    this.handleFiles(files).subscribe();\n  }\n\n  /** On file dropped */\n  public dropped(event: UploadEvent): void {\n    const files = event.files;\n    const filesForUpload: Subject<File> = new Subject();\n    let droppedFilesCount = 0;\n    for (const droppedFile of files) {\n      // Is it a file?\n      if (droppedFile.fileEntry.isFile) {\n        droppedFilesCount += 1;\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n        fileEntry.file((file: File) => {\n          filesForUpload.next(file);\n        });\n      } else {\n        // It was a directory (empty directories are added, otherwise only files)\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n        // console.log(droppedFile.relativePath, fileEntry);\n      }\n    }\n    runInInjectionContext((this.injector), () => {\n      filesForUpload.pipe(\n        takeUntilDestroyed(),\n        bufferCount(droppedFilesCount),\n        switchMap(filesForUpload => this.handleFiles(filesForUpload))\n      ).subscribe();\n    });\n  }\n\n  /** Emits event when file upload api returns success  */\n  public onUploadSuccess(fileItem: FilePreviewModel): void {\n    this.uploadSuccess.next(fileItem);\n  }\n\n  /** Emits event when file upload api returns success  */\n  public onUploadFail(er: HttpErrorResponse): void {\n    this.uploadFail.next(er);\n  }\n\n  /** Emits event when file remove api returns success  */\n  public onRemoveSuccess(fileItem: FilePreviewModel): void {\n    this.removeSuccess.next(fileItem);\n    this.removeFileFromList(fileItem);\n  }\n\n  public getSafeUrl(file: File): SafeResourceUrl {\n    return this.fileService.createSafeUrl(file);\n  }\n\n  /** Removes file from UI and sends api */\n  public removeFile(fileItem: FilePreviewModel): void {\n    if (!this.enableAutoUpload) {\n      this.removeFileFromList(fileItem);\n      return;\n    }\n    if (this.adapter) {\n      this.adapter.removeFile(fileItem).subscribe(res => {\n        this.onRemoveSuccess(fileItem);\n      });\n    } else {\n      console.warn('no adapter was provided');\n    }\n  }\n\n  /** Listen when Cropper is closed and open new cropper if next image exists */\n  private _listenToCropClose(): void {\n    this._cropClosed$\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((res: FilePreviewModel) => {\n        const croppedIndex = this.filesForCropper.findIndex(\n          item => item.name === res.fileName\n        );\n        const nextFile =\n          croppedIndex !== -1\n            ? this.filesForCropper[croppedIndex + 1]\n            : undefined;\n        this.filesForCropper = [...this.filesForCropper].filter(\n          item => item.name !== res.fileName\n        );\n        if (nextFile) {\n          this.openCropper(nextFile);\n        }\n      });\n  }\n\n  /** Sets custom cropper options if avaiable */\n  private _setCropperOptions(): void {\n    if (!this.cropperOptions) {\n      this._setDefaultCropperOptions();\n    }\n  }\n  /** Sets manual cropper options if no custom options are avaiable */\n  private _setDefaultCropperOptions(): void {\n    this.cropperOptions = DEFAULT_CROPPER_OPTIONS;\n  }\n\n  /** Handles input and drag/drop files */\n  handleFiles(files: File[]): Observable<void> {\n    if (!this.isValidMaxFileCount(files)) {\n      return of(null);\n    }\n    const isValidUploadSync = files.every(item => this._validateFileSync(item));\n    const asyncFunctions = files.map(item => this._validateFileAsync(item));\n    return combineLatest([...asyncFunctions]).pipe(\n      map(res => {\n        const isValidUploadAsync = res.every(result => result === true);\n        if (!isValidUploadSync || !isValidUploadAsync) {\n          return;\n        }\n        files.forEach((file: File, index: number) => {\n          this.handleInputFile(file, index);\n        });\n      })\n    );\n  }\n\n  /** Validates synchronous validations */\n  private _validateFileSync(file: File): boolean {\n    if (!file) {\n      return false;\n    }\n    if (!this.isValidUploadType(file)) {\n      return false;\n    }\n    if (!this.isValidExtension(file, file.name)) {\n      return false;\n    }\n    return true;\n  }\n\n  /** Validates asynchronous validations */\n  private _validateFileAsync(file: File): Observable<boolean> {\n    if (!this.customValidator) {\n      return of(true);\n    }\n    return this.customValidator(file).pipe(\n      tap(res => {\n        if (!res) {\n          this.validationError.next({\n            file,\n            error: FileValidationTypes.customValidator\n          });\n        }\n      })\n    );\n  }\n\n  /** Handles input and drag&drop files */\n  handleInputFile(file: File, index): void {\n    const type = GET_FILE_CATEGORY_TYPE(file.type);\n    if (type === 'image' && this.enableCropper) {\n      this.filesForCropper.push(file);\n      if (!this.currentCropperFile) {\n        this.openCropper(file);\n      }\n    } else {\n      /** Size is not initially checked on handleInputFiles because of cropper size change */\n      if (this.isValidSize(file, file.size)) {\n        this.pushFile(file);\n      }\n    }\n  }\n\n  /** Validates if upload type is single so another file cannot be added */\n  private isValidUploadType(file): boolean {\n    const isValid = this.fileValidatorService.isValidUploadType(this.files, this.uploadType);\n\n    if (!isValid) {\n      this.validationError.next({\n        file,\n        error: FileValidationTypes.uploadType\n      });\n      return false;\n    };\n\n    return true;\n  }\n\n  /** Validates max file count */\n  private isValidMaxFileCount(files: File[]): boolean {\n    const isValid = this.fileValidatorService.isValidMaxFileCount(this.fileMaxCount, files, this.files);\n\n    if (isValid) {\n      return true;\n    } else {\n      this.validationError.next({\n        file: null,\n        error: FileValidationTypes.fileMaxCount\n      });\n      return false;\n    }\n  }\n\n  /** Add file to file list after succesfull validation */\n  pushFile(file: File, fileName = file.name): void {\n    const newFile = { file, fileName };\n    const files = [...this.files, newFile];\n    this.setFiles(files);\n    this.fileAdded.next({ file, fileName });\n    this.changeRef.detectChanges();\n  }\n\n  /** @description Set files for uploader */\n  public setFiles(files: FilePreviewModel[]): void {\n    this.files = files;\n    this.changeRef.detectChanges();\n  }\n\n  /** Opens cropper for image crop */\n  openCropper(file: File): void {\n    if ((window as any).CROPPER  || typeof Cropper !== 'undefined') {\n      this.safeCropImgUrl = this.fileService.createSafeUrl(file);\n      this.currentCropperFile = file;\n      this.changeRef.detectChanges();\n    } else {\n      console.warn(\"please import cropperjs script and styles to use cropper feature or disable it by setting [enableCropper]='false'\" );\n      return;\n    }\n  }\n\n  /** On img load event */\n  cropperImgLoaded(e): void {\n    const image = document.getElementById('cropper-img');\n    this.cropper = new Cropper(image, this.cropperOptions);\n  }\n\n  /** Close or cancel cropper */\n  closeCropper(filePreview: FilePreviewModel): void {\n    this.currentCropperFile = undefined;\n    this.cropper = undefined;\n    this.changeRef.detectChanges();\n    setTimeout(() => this._cropClosed$.next(filePreview), 200);\n  }\n\n  /** Removes files from files list */\n  removeFileFromList(file: FilePreviewModel): void {\n    const files = this.files.filter(f => f.fileName !== file.fileName);\n    this.setFiles(files);\n    this.fileRemoved.next(file);\n    this.changeRef.detectChanges();\n  }\n\n  /** Validates file extension */\n  private isValidExtension(file: File, fileName: string): boolean {\n    const isValid = this.fileValidatorService.isValidExtension(fileName, this.fileExtensions);\n    if (!isValid) {\n      this.validationError.next({file, error: FileValidationTypes.extensions});\n      return false;\n    }\n    return true;\n  }\n\n  /** Validates selected file size and total file size */\n  private isValidSize(newFile: File, newFileSize: number): boolean {\n    /** Validating selected file size */\n    const isValidFileSize: boolean = this.fileValidatorService.isValidFileSize(newFileSize, this.fileMaxSize);\n    const isValidTotalFileSize: boolean = this.fileValidatorService.isValidTotalFileSize(newFile, this.files, this.totalMaxSize);\n\n    if (!isValidFileSize) {\n      this.validationError.next({\n        file: newFile,\n        error: FileValidationTypes.fileMaxSize\n      });\n    }\n\n    /** Validating Total Files Size */\n    if (!isValidTotalFileSize) {\n      this.validationError.next({\n        file: newFile,\n        error: FileValidationTypes.totalMaxSize\n      });\n    };\n\n    return isValidFileSize && isValidTotalFileSize;\n  }\n\n  /** when crop button submitted */\n  public onCropSubmit(): void {\n    const mimeType: string | void = lookup(this.currentCropperFile.name);\n    if (!mimeType) {\n      throw new Error(\"mimeType not found\");\n    }\n    this.isCroppingBusy = true;\n    this.cropper\n    .getCroppedCanvas(this.croppedCanvasOptions)\n    .toBlob(this._blobFallBack.bind(this), mimeType);\n  }\n\n  /** After crop submit */\n  private _blobFallBack(blob: Blob): void {\n    if (!blob) {\n      return;\n    }\n    if (this.isValidSize(blob as File, blob.size)) {\n      this.pushFile(blob as File, this.currentCropperFile.name);\n    }\n    this.closeCropper({\n      file: blob as File,\n      fileName: this.currentCropperFile.name\n    });\n    this.isCroppingBusy = false;\n    this.changeRef.detectChanges();\n  }\n\n}\n","<div\n  (click)=\"fileInput.click()\"\n  class=\"file-drop-wrapper\"\n  *ngIf=\"showeDragDropZone\"\n>\n  <file-drop\n    (onFileDrop)=\"dropped($event)\"\n    [customstyle]=\"'custom-drag'\"\n    [captions]=\"captions\"\n  >\n    <ng-content select=\".dropzoneTemplate\"> </ng-content>\n  </file-drop>\n</div>\n\n<input\n  type=\"file\"\n  name=\"file[]\"\n  id=\"fileInput\"\n  #fileInput\n  [multiple]=\"uploadType === 'multi' ? 'multiple' : ''\"\n  [attr.capture]=\"fileInputCapture\"\n  (click)=\"fileInput.value = null\"\n  (change)=\"onChange(fileInput.files)\"\n  [accept]=\"accept\"\n  class=\"file-input\"\n/>\n\n<div class=\"cropperJsOverlay\" *ngIf=\"currentCropperFile\">\n<div class=\"cropperJsBox\">\n  <img\n    [src]=\"safeCropImgUrl\"\n    id=\"cropper-img\"\n    (load)=\"cropperImgLoaded($event)\"\n  />\n  <div class=\"cropper-actions\">\n    <button class=\"cropSubmit\"\n    (click)=\"onCropSubmit()\"\n    [disabled]=\"isCroppingBusy\"\n    type=\"button\" [ngClass]=\"{'is-loading':isCroppingBusy }\"\n    >\n      {{ captions?.cropper?.crop }}\n    </button>\n    <button\n      class=\"cropCancel\"\n      type=\"button\"\n      (click)=\"\n        closeCropper({\n          file: currentCropperFile,\n          fileName: currentCropperFile.name\n        })\n      \"\n    >\n      {{ captions?.cropper?.cancel }}\n    </button>\n  </div>\n</div>\n</div>\n\n<div\n  class=\"files-preview-wrapper\"\n  [ngClass]=\"{ 'visually-hidden': !showPreviewContainer }\"\n>\n  <file-preview-container\n    *ngIf=\"files\"\n    [previewFiles]=\"files\"\n    (removeFile)=\"removeFile($event)\"\n    (uploadSuccess)=\"onUploadSuccess($event)\"\n    (uploadFail)=\"onUploadFail($event)\"\n    [adapter]=\"adapter\"\n    [itemTemplate]=\"itemTemplate\"\n    [captions]=\"captions\"\n    [enableAutoUpload]=\"enableAutoUpload\"\n  >\n  </file-preview-container>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FileComponent} from './file-drop.component';\nimport { CloudIconComponent } from '../icons/cloud-icon/cloud-icon.component';\n\n@NgModule({\n  declarations: [\n    FileComponent,\n    CloudIconComponent\n  ],\n  exports: [FileComponent],\n  imports: [CommonModule],\n  providers: [],\n  bootstrap: [FileComponent],\n})\nexport class FileDropModule {}\n","import { CloseIconComponent } from './icons/close-icon/close-icon.component';\nimport { FilePreviewItemComponent } from './file-preview-container/file-preview-item/file-preview-item.component';\nimport { FilePreviewContainerComponent } from './file-preview-container/file-preview-container.component';\nimport { NgModule } from '@angular/core';\nimport { FilePickerComponent } from './file-picker.component';\nimport { CommonModule } from '@angular/common';\nimport { FilePickerService } from './file-picker.service';\nimport { FileDropModule } from './file-drop/file-drop.module';\nimport { PreviewLightboxComponent } from './file-preview-container/preview-lightbox/preview-lightbox.component';\nimport { RefreshIconComponent } from './file-preview-container/file-preview-item/refresh-icon/refresh-icon.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FileDropModule,\n  ],\n  declarations: [\n    FilePickerComponent,\n    FilePreviewContainerComponent,\n    FilePreviewItemComponent,\n    PreviewLightboxComponent,\n    RefreshIconComponent,\n    CloseIconComponent\n  ],\n  exports: [FilePickerComponent],\n  providers: [FilePickerService]\n})\nexport class FilePickerModule {}\n","/*\n * Public API Surface of file-picker\n */\n\nexport * from './lib/file-picker.service';\nexport * from './lib/file-picker.component';\nexport * from './lib/file-picker.module';\nexport * from './lib/file-picker.adapter';\nexport * from './lib/file-preview.model';\nexport * from './lib/validation-error.model';\nexport * from './lib/uploader-captions';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2.CloudIconComponent","i1.FilePickerService","i3.RefreshIconComponent","i4.CloseIconComponent","i3.CloseIconComponent","i2.FilePreviewItemComponent","i3.PreviewLightboxComponent","i2.FileValidatorService","i3","i4.FileComponent","i5.FilePreviewContainerComponent"],"mappings":";;;;;;;;;;MAKa,iBAAiB,CAAA;AAC5B,IAAA,WAAA,CAAoB,SAAuB,EAAA;QAAvB,IAAS,CAAA,SAAA,GAAT,SAAS;;AAC7B,IAAA,cAAc,CAAC,QAAQ,EAAA;AACrB,QAAA,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,aAAa,EAAE;AAC3C,YAAA,MAAM,EAAE;AACN,gBAAA,IAAI,EAAE;AACP;AACF,SAAA,CAAC;AACF,QAAA,OAAO,EAAE,CAAE,KAAK,CAAC,MAAM,CAAC;;;AAI1B,IAAA,aAAa,CAAC,IAAI,EAAA;AAChB,QAAA,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;YAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,GAAG,CAAC;AAClE,YAAA,OAAO,OAAO;;QACd,OAAO,EAAE,EAAE;AACX,YAAA,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;;;8GAlBR,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAjB,iBAAiB,EAAA,CAAA,CAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B;;;ACJK,SAAU,sBAAsB,CAAC,aAAqB,EAAA;AAC1D,IAAA,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AACnC,QAAA,OAAO,OAAO;;AACT,SAAA,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC1C,QAAA,OAAO,OAAO;;SACT;AACL,QAAA,OAAO,OAAO;;AAElB;AAEM,SAAU,aAAa,CAAC,IAAY,EAAA;AACxC,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE;AAC5C;AAEM,SAAU,aAAa,CAAC,QAAgB,EAAA;AAC5C,IAAA,MAAM,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;IACzE,OAAQ,WAAmB,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AAC9D;;ICbY;AAAZ,CAAA,UAAY,mBAAmB,EAAA;AAC7B,IAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,eAA6B;AAC7B,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,gBAA+B;AAC/B,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,gBAA+B;AAC/B,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;AACzB,IAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,aAA0B;AAC1B,IAAA,mBAAA,CAAA,iBAAA,CAAA,GAAA,kBAAoC;AACtC,CAAC,EAPW,mBAAmB,KAAnB,mBAAmB,GAO9B,EAAA,CAAA,CAAA;;ACTM,MAAM,eAAe,GAAqB;AAC7C,IAAA,QAAQ,EAAE;AACN,QAAA,KAAK,EAAE,yBAAyB;AAChC,QAAA,EAAE,EAAE,IAAI;AACR,QAAA,MAAM,EAAE;AACX,KAAA;AACD,IAAA,OAAO,EAAE;AACL,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,MAAM,EAAE;AACX,KAAA;AACD,IAAA,WAAW,EAAE;AACT,QAAA,MAAM,EAAE,QAAQ;AAChB,QAAA,WAAW,EAAE;AAChB;CACJ;;AChBM,MAAM,uBAAuB,GAAG;AACnC,IAAA,QAAQ,EAAE,MAAM;AAChB,IAAA,WAAW,EAAE,CAAC;AACd,IAAA,QAAQ,EAAE,IAAI;AACd,IAAA,OAAO,EAAE,IAAI;AACb,IAAA,QAAQ,EAAE,IAAI;AACd,IAAA,QAAQ,EAAE,IAAI;AACd,IAAA,YAAY,EAAE;CACjB;AAEK,SAAU,QAAQ,CAAC,IAAY,EAAA;IAClC,OAAO,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,OAAO;AAC/C;;MCLa,oBAAoB,CAAA;AAE/B,IAAA,WAAA,GAAA;;IAGO,gBAAgB,CAAC,QAAgB,EAAE,cAAwB,EAAA;AAChE,QAAA,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE;AAAE,YAAA,OAAO,IAAI;;QAE1C,MAAM,SAAS,GAAW,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;AACnD,QAAA,MAAM,uBAAuB,GAAG,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC;AAC5E,QAAA,IAAI,uBAAuB,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;AACnE,YAAA,OAAO,KAAK;;AAEd,QAAA,OAAO,IAAI;;;IAIN,iBAAiB,CAAC,KAAyB,EAAE,UAAkB,EAAA;QACpE,IAAI,UAAU,KAAK,QAAQ,IAAI,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;AAChD,YAAA,OAAO,KAAK;;aACP;AACL,YAAA,OAAO,IAAI;;;;AAKR,IAAA,mBAAmB,CAAC,YAAoB,EAAE,QAAgB,EAAE,KAAyB,EAAA;AAC1F,QAAA,IAAI,CAAC,YAAY,IAAI,YAAY,IAAI,KAAK,EAAE,MAAM,GAAG,QAAQ,EAAE,MAAM,EAAE;AACrE,YAAA,OAAO,IAAI;;aACN;AACL,YAAA,OAAO,KAAK;;;IAIT,eAAe,CAAC,IAAY,EAAE,WAAmB,EAAA;AACtD,QAAA,MAAM,MAAM,GAAW,QAAQ,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,WAAW,KAAK,WAAW,IAAI,MAAM,GAAG,WAAW,CAAC,EAAE;AACzD,YAAA,OAAO,IAAI;;aACN;AACL,YAAA,OAAO,KAAK;;;AAIT,IAAA,oBAAoB,CAAC,OAAa,EAAE,KAAyB,EAAE,YAAoB,EAAA;;QAExF,MAAM,SAAS,GAAG;aACf,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;AACjC,aAAA,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;AAEvC,QAAA,IAAI,CAAC,YAAY,KAAK,YAAY,IAAI,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,EAAE;AACxF,YAAA,OAAO,IAAI;;aACN;AACL,YAAA,OAAO,KAAK;;;8GApDL,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;;2FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE;AACb,iBAAA;;;ACJD;;;;AAIG;MACU,UAAU,CAAA;IACnB,WACW,CAAA,YAAoB,EACpB,SAA0B,EAAA;QAD1B,IAAY,CAAA,YAAA,GAAZ,YAAY;QACZ,IAAS,CAAA,SAAA,GAAT,SAAS;;AAEvB;;MCVY,WAAW,CAAA;AACpB,IAAA,WAAA,CACW,KAAmB,EAAA;QAAnB,IAAK,CAAA,KAAA,GAAL,KAAK;;AAEnB;;MCGY,kBAAkB,CAAA;AAE7B,IAAA,WAAA,GAAA;IAEA,QAAQ,GAAA;;8GAJG,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,uECT/B,kcAKU,EAAA,MAAA,EAAA,CAAA,2GAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FDIG,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAP9B,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAY,EAGL,eAAA,EAAA,uBAAuB,CAAC,MAAM,cACnC,KAAK,EAAA,QAAA,EAAA,kcAAA,EAAA,MAAA,EAAA,CAAA,2GAAA,CAAA,EAAA;;;MEmBR,aAAa,CAAA;IAyBxB,WAAoB,CAAA,IAAY,EAAU,QAAmB,EAAA;QAAzC,IAAI,CAAA,IAAA,GAAJ,IAAI;QAAkB,IAAQ,CAAA,QAAA,GAAR,QAAQ;QArBlD,IAAW,CAAA,WAAA,GAAW,IAAI;QAE1B,IAAS,CAAA,SAAA,GAAG,KAAK;AAGV,QAAA,IAAA,CAAA,UAAU,GAA8B,IAAI,YAAY,EAAe;AAEvE,QAAA,IAAA,CAAA,UAAU,GAAsB,IAAI,YAAY,EAAO;AAEvD,QAAA,IAAA,CAAA,WAAW,GAAsB,IAAI,YAAY,EAAO;QAE/D,IAAK,CAAA,KAAA,GAAG,EAAE;QACV,IAAK,CAAA,KAAA,GAAiB,EAAE;QAExB,IAAY,CAAA,YAAA,GAAG,KAAK;QAEpB,IAAa,CAAA,aAAA,GAAG,KAAK;QAIrB,IAAsB,CAAA,sBAAA,GAAG,CAAC;AAExB,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrB,YAAA,IAAI,CAAC,WAAW,GAAG,WAAW;;AAEhC,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,GAAG,IAAG;AACrE,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI;AAC3B,SAAC,CAAC;AACF,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE,GAAG,IAAG;AACjE,YAAA,IAAI,CAAC,aAAa,GAAG,KAAK;AAC5B,SAAC,CAAC;;AAEG,IAAA,UAAU,CAAC,KAAY,EAAA;QAC5B,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC1C,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACtB,gBAAA,IAAI,CAAC,YAAY,GAAG,IAAI;AACxB,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;;AAE7B,YAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;;;AAIvB,IAAA,WAAW,CAAC,KAAY,EAAA;QAC7B,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC1C,YAAA,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,gBAAA,IAAI,CAAC,YAAY,GAAG,KAAK;AACzB,gBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;;AAE9B,YAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;;;AAI9B,IAAA,SAAS,CAAC,KAAU,EAAA;QAClB,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC1C,YAAA,IAAI,CAAC,YAAY,GAAG,KAAK;AACzB,YAAA,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM;AACtC,YAAA,IAAI,MAAM;AACV,YAAA,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE;gBAC5B,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM;;iBACnC;gBACL,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM;;AAG1C,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/B,gBAAA,IAAI,KAAsB;AAC1B,gBAAA,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE;oBAC5B,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;AAChD,wBAAA,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;;;qBAEnD;oBACL,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;AAChD,wBAAA,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;;;gBAG1D,IAAI,CAAC,KAAK,EAAE;oBACV,MAAM,IAAI,GAAS,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC9C,IAAI,IAAI,EAAE;AACR,wBAAA,MAAM,aAAa,GAAwB;4BACzC,IAAI,EAAE,IAAI,CAAC,IAAI;AACf,4BAAA,WAAW,EAAE,KAAK;AAClB,4BAAA,MAAM,EAAE,IAAI;AACZ,4BAAA,IAAI,EAAE,CAAC,QAA+B,KAAU;gCAC9C,QAAQ,CAAC,IAAI,CAAC;;yBAEjB;wBACD,MAAM,QAAQ,GAAe,IAAI,UAAU,CACzC,aAAa,CAAC,IAAI,EAClB,aAAa,CACd;AACD,wBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;;;qBAEtB;AACL,oBAAA,IAAI,KAAK,CAAC,MAAM,EAAE;wBAChB,MAAM,QAAQ,GAAe,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;AAC9D,wBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;;AACpB,yBAAA,IAAI,KAAK,CAAC,WAAW,EAAE;wBAC5B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC;;;;AAK9C,YAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YAE1B,MAAM,eAAe,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC;YACvC,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,IAAG;AAChD,gBAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,sBAAsB,KAAK,CAAC,EAAE;AAC9D,oBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjD,oBAAA,IAAI,CAAC,KAAK,GAAG,EAAE;;AAEnB,aAAC,CAAC;;;IAIE,gBAAgB,CAAC,IAAqB,EAAE,IAAY,EAAA;AAC1D,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,QAAQ,GAAe,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;AACvD,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;AACzB,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAK;gBACjB,IAAI,CAAC,UAAU,EAAE;AACnB,aAAC,CAAC;;aACG;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACtB,YAAA,IAAI,GAAG,IAAI,GAAG,GAAG;AACjB,YAAA,MAAM,SAAS,GAAI,IAAiC,CAAC,YAAY,EAAE;YACnE,IAAI,OAAO,GAAG,EAAE;YAChB,MAAM,OAAO,GAAG,IAAI;YAEpB,MAAM,WAAW,GAAG,MAAK;gBACvB,OAAO,CAAC,sBAAsB,EAAE;AAChC,gBAAA,SAAS,CAAC,WAAW,CAAC,CAAC,GAAG,KAAI;AAC5B,oBAAA,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;;AAEf,wBAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;4BACxB,MAAM,QAAQ,GAAe,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;AACvD,4BAAA,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAK;AACpB,gCAAA,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;AAC9B,6BAAC,CAAC;;6BACG;AACL,4BAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,gCAAA,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAK;AACpB,oCAAA,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC9D,iCAAC,CAAC;;;AAGN,wBAAA,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAK;4BACpB,OAAO,CAAC,UAAU,EAAE;AACtB,yBAAC,CAAC;;yBACG;;AAEL,wBAAA,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;AAC7B,wBAAA,WAAW,EAAE;;oBAEf,OAAO,CAAC,sBAAsB,EAAE;AAClC,iBAAC,CAAC;AACJ,aAAC;AAED,YAAA,WAAW,EAAE;;;AAIT,IAAA,UAAU,CAAC,IAAgB,EAAA;AACjC,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;;AAGvB,IAAA,WAAW,CAAC,GAAG,EAAA;AACb,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;;IAGtB,UAAU,GAAA;QACR,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;;IAGxB,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE;;AAGT,IAAA,cAAc,CAAC,KAAK,EAAA;QAC1B,KAAK,CAAC,eAAe,EAAE;QACvB,KAAK,CAAC,cAAc,EAAE;;IAGxB,WAAW,GAAA;AACT,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,YAAA,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;;QAEjC,IAAI,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,SAAS,EAAE;;8GA9LP,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aAAa,yPC1B1B,yyBAqBA,EAAA,MAAA,EAAA,CAAA,gjBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;2FDKa,aAAa,EAAA,UAAA,EAAA,CAAA;kBANzB,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAW,cAGT,KAAK,EAAA,QAAA,EAAA,yyBAAA,EAAA,MAAA,EAAA,CAAA,gjBAAA,CAAA,EAAA;mGAInB,QAAQ,EAAA,CAAA;sBADP;gBAGD,WAAW,EAAA,CAAA;sBADV;gBAGD,SAAS,EAAA,CAAA;sBADR;gBAIM,UAAU,EAAA,CAAA;sBADhB;gBAGM,UAAU,EAAA,CAAA;sBADhB;gBAGM,WAAW,EAAA,CAAA;sBADjB;;;IE7BS;AAAZ,CAAA,UAAY,YAAY,EAAA;AACrB,IAAA,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;AACrB,IAAA,YAAA,CAAA,aAAA,CAAA,GAAA,aAA2B;AAC3B,IAAA,YAAA,CAAA,OAAA,CAAA,GAAA,OAAe;AAClB,CAAC,EAJW,YAAY,KAAZ,YAAY,GAIvB,EAAA,CAAA,CAAA;MAEqB,iBAAiB,CAAA;AAGtC;;MCTY,oBAAoB,CAAA;8GAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,yECTjC,sXAGM,EAAA,MAAA,EAAA,CAAA,wDAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FDMO,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAPhC,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,cAAc,EAGP,eAAA,EAAA,uBAAuB,CAAC,MAAM,cACnC,KAAK,EAAA,QAAA,EAAA,sXAAA,EAAA,MAAA,EAAA,CAAA,wDAAA,CAAA,EAAA;;;MEER,kBAAkB,CAAA;AAE7B,IAAA,WAAA,GAAA;IAEA,QAAQ,GAAA;;8GAJG,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,uECT/B,6QAIM,EAAA,MAAA,EAAA,CAAA,wDAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FDKO,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAP9B,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAY,EAGL,eAAA,EAAA,uBAAuB,CAAC,MAAM,cACnC,KAAK,EAAA,QAAA,EAAA,6QAAA,EAAA,MAAA,EAAA,CAAA,wDAAA,CAAA,EAAA;;;MEUR,wBAAwB,CAAA;IAiBnC,WACU,CAAA,WAA8B,EAC9B,SAA4B,EAAA;QAD5B,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAS,CAAA,SAAA,GAAT,SAAS;AAlBO,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAoB;AACjD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAoB;AACpD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAqB;AAClD,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAoB;;IAkBtE,QAAQ,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AACtB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC/B,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;;QAEpD,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;;AAG1C,IAAA,UAAU,CAAC,IAAiB,EAAA;QACjC,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC;;;AAGtC,IAAA,SAAS,CAAC,CAAC,EAAA;QAChB,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACvE,IAAI,CAAC,GAAG,CAAC;QACT,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;AAC5B,QAAA,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,EAAE;AACvB,YAAA,CAAC,GAAG,CAAC,GAAG,IAAI;;;;QAId,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;;;IAGrD,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,WAAW,GAAG,SAAS;AAC5B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;;AAG1B,IAAA,QAAQ,CAAC,QAA0B,EAAA;QACxC,IAAI,CAAC,kBAAkB,EAAE;AACzB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACnB,YAAA,GAAG,QAAQ;AACX,YAAA,cAAc,EAAE,IAAI,CAAC,cAAc,IAAI,QAAQ,CAAC;AACjD,SAAA,CAAC;;AAGI,IAAA,WAAW,CAAC,QAA0B,EAAA;AAC5C,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B;;AAEF,QAAA,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,mBAAmB;AACxB,gBAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ;AAC/B,qBAAA,SAAS,CAAC,CAAC,GAAmB,KAAI;oBACjC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,YAAY,CAAC,QAAQ,EAAE;wBAC/C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC;AACzC,wBAAA,IAAI,CAAC,cAAc,GAAG,SAAS;;oBAEjC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,YAAY,CAAC,WAAW,EAAE;AAClD,wBAAA,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,QAAQ;AAClC,wBAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;oBAEhC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,YAAY,CAAC,KAAK,EAAE;AAC5C,wBAAA,IAAI,CAAC,WAAW,GAAG,IAAI;wBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AAC9B,wBAAA,IAAI,CAAC,cAAc,GAAG,SAAS;;AAEjC,oBAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;AAChC,iBAAC,EAAE,CAAC,EAAqB,KAAI;AAC3B,oBAAA,IAAI,CAAC,WAAW,GAAG,IAAI;AACvB,oBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;AACxB,oBAAA,IAAI,CAAC,cAAc,GAAG,SAAS;AAC/B,oBAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;AACpC,iBAAC,CAAC;;aACO;AACL,YAAA,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC;;;;IAInC,gBAAgB,CAAC,cAAmB,EAAE,QAA0B,EAAA;AACtE,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc;AACpC,QAAA,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,cAAc;AAC7C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,GAAG,QAAQ,EAAE,cAAc,EAAC,CAAC;;;IAIjD,kBAAkB,GAAA;AACzB,QAAA,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC5B,YAAA,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE;;;8GAtG7B,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,6VCjBrC,ixEAmDA,EAAA,MAAA,EAAA,CAAA,46HAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FDlCa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAPpC,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,mBAAmB,EAGZ,eAAA,EAAA,uBAAuB,CAAC,MAAM,cACnC,KAAK,EAAA,QAAA,EAAA,ixEAAA,EAAA,MAAA,EAAA,CAAA,46HAAA,CAAA,EAAA;mHAGO,UAAU,EAAA,CAAA;sBAAnC;gBACyB,aAAa,EAAA,CAAA;sBAAtC;gBACyB,UAAU,EAAA,CAAA;sBAAnC;gBACyB,YAAY,EAAA,CAAA;sBAArC;gBACe,QAAQ,EAAA,CAAA;sBAAvB;gBACQ,OAAO,EAAA,CAAA;sBAAf;gBACQ,YAAY,EAAA,CAAA;sBAApB;gBACQ,QAAQ,EAAA,CAAA;sBAAhB;gBACQ,gBAAgB,EAAA,CAAA;sBAAxB;;;MEfU,wBAAwB,CAAA;AAKnC,IAAA,WAAA,CAAoB,SAAuB,EAAA;QAAvB,IAAS,CAAA,SAAA,GAAT,SAAS;AAHnB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAQ;;IAKjD,QAAQ,GAAA;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;AAE1B,IAAA,UAAU,CAAC,IAAiB,EAAA;QACjC,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,GAAG,CAAC;;AAE5D,IAAA,OAAO,CAAC,KAAK,EAAA;AACnB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;;8GAfd,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,kJCXrC,oYAYA,EAAA,MAAA,EAAA,CAAA,qsBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FDDa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAPpC,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAkB,EAGX,eAAA,EAAA,uBAAuB,CAAC,MAAM,cACnC,KAAK,EAAA,QAAA,EAAA,oYAAA,EAAA,MAAA,EAAA,CAAA,qsBAAA,CAAA,EAAA;iFAGV,IAAI,EAAA,CAAA;sBAAZ;gBACS,YAAY,EAAA,CAAA;sBAArB;;;MEAU,6BAA6B,CAAA;AAUxC,IAAA,WAAA,GAAA;AAN0B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAoB;AACjD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAoB;AACpD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAqB;;IAO5E,QAAQ,GAAA;;AAGD,IAAA,YAAY,CAAC,IAAsB,EAAA;AACzC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI;;IAGlB,aAAa,GAAA;AAClB,QAAA,IAAI,CAAC,YAAY,GAAG,SAAS;;8GArBpB,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA7B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,6BAA6B,4UCb1C,+iBAaA,EAAA,MAAA,EAAA,CAAA,sGAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAM,wBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,cAAA,EAAA,UAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,eAAA,EAAA,YAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FDAa,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBAPzC,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,wBAAwB,EAGjB,eAAA,EAAA,uBAAuB,CAAC,MAAM,cACnC,KAAK,EAAA,QAAA,EAAA,+iBAAA,EAAA,MAAA,EAAA,CAAA,sGAAA,CAAA,EAAA;wDAGV,YAAY,EAAA,CAAA;sBAApB;gBACQ,YAAY,EAAA,CAAA;sBAApB;gBACQ,gBAAgB,EAAA,CAAA;sBAAxB;gBACyB,UAAU,EAAA,CAAA;sBAAnC;gBACyB,aAAa,EAAA,CAAA;sBAAtC;gBACyB,UAAU,EAAA,CAAA;sBAAnC;gBAEQ,OAAO,EAAA,CAAA;sBAAf;gBACQ,QAAQ,EAAA,CAAA;sBAAhB;;;MEmBU,mBAAmB,CAAA;AAiE9B,IAAA,WAAA,CACmB,WAA8B,EAC9B,oBAA0C,EAC1C,SAA4B,EAAA;QAF5B,IAAW,CAAA,WAAA,GAAX,WAAW;QACX,IAAoB,CAAA,oBAAA,GAApB,oBAAoB;QACpB,IAAS,CAAA,SAAA,GAAT,SAAS;;AAlET,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAoB;;AAEpD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAqB;;AAElD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAoB;;AAEpD,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAmB;;AAErD,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAoB;;AAEhD,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAoB;;QAI5D,IAAa,CAAA,aAAA,GAAG,KAAK;;QAErB,IAAiB,CAAA,iBAAA,GAAG,IAAI;;QAExB,IAAoB,CAAA,oBAAA,GAAG,IAAI;;QAI3B,IAAU,CAAA,UAAA,GAAG,OAAO;;QAcpB,IAAoB,CAAA,oBAAA,GAAW,EAAE;;QAMjC,IAAQ,CAAA,QAAA,GAAqB,eAAe;;;QAG5C,IAAgB,CAAA,gBAAA,GAAG,IAAI;QAMzB,IAAK,CAAA,KAAA,GAAuB,EAAE;;QAErC,IAAe,CAAA,eAAA,GAAW,EAAE;AAMpB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,OAAO,EAAoB;AAC9C,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,OAAO,EAAQ;AACxB,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;;IAQrC,QAAQ,GAAA;QACb,IAAI,CAAC,kBAAkB,EAAE;QACzB,IAAI,CAAC,kBAAkB,EAAE;;IAGpB,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AACvB,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;;;;AAKtB,IAAA,QAAQ,CAAC,KAAU,EAAA;QACxB,MAAM,KAAK,GAAW,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE;;;AAI9B,IAAA,OAAO,CAAC,KAAkB,EAAA;AAC/B,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK;AACzB,QAAA,MAAM,cAAc,GAAkB,IAAI,OAAO,EAAE;QACnD,IAAI,iBAAiB,GAAG,CAAC;AACzB,QAAA,KAAK,MAAM,WAAW,IAAI,KAAK,EAAE;;AAE/B,YAAA,IAAI,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE;gBAChC,iBAAiB,IAAI,CAAC;AACtB,gBAAA,MAAM,SAAS,GAAG,WAAW,CAAC,SAAgC;AAC9D,gBAAA,SAAS,CAAC,IAAI,CAAC,CAAC,IAAU,KAAI;AAC5B,oBAAA,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B,iBAAC,CAAC;;iBACG;;AAEL,gBAAA,MAAM,SAAS,GAAG,WAAW,CAAC,SAAqC;;;;QAIvE,qBAAqB,EAAE,IAAI,CAAC,QAAQ,GAAG,MAAK;AAC1C,YAAA,cAAc,CAAC,IAAI,CACjB,kBAAkB,EAAE,EACpB,WAAW,CAAC,iBAAiB,CAAC,EAC9B,SAAS,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAC9D,CAAC,SAAS,EAAE;AACf,SAAC,CAAC;;;AAIG,IAAA,eAAe,CAAC,QAA0B,EAAA;AAC/C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;;;AAI5B,IAAA,YAAY,CAAC,EAAqB,EAAA;AACvC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;;;AAInB,IAAA,eAAe,CAAC,QAA0B,EAAA;AAC/C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;AACjC,QAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;;AAG5B,IAAA,UAAU,CAAC,IAAU,EAAA;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC;;;AAItC,IAAA,UAAU,CAAC,QAA0B,EAAA;AAC1C,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAC1B,YAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YACjC;;AAEF,QAAA,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,IAAG;AAChD,gBAAA,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;AAChC,aAAC,CAAC;;aACG;AACL,YAAA,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC;;;;IAKnC,kBAAkB,GAAA;AACxB,QAAA,IAAI,CAAC;AACF,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,GAAqB,KAAI;YACnC,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CACjD,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,QAAQ,CACnC;AACD,YAAA,MAAM,QAAQ,GACZ,YAAY,KAAK,CAAC;kBACd,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,CAAC;kBACrC,SAAS;YACf,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CACrD,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,QAAQ,CACnC;YACD,IAAI,QAAQ,EAAE;AACZ,gBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;;AAE9B,SAAC,CAAC;;;IAIE,kBAAkB,GAAA;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,yBAAyB,EAAE;;;;IAI5B,yBAAyB,GAAA;AAC/B,QAAA,IAAI,CAAC,cAAc,GAAG,uBAAuB;;;AAI/C,IAAA,WAAW,CAAC,KAAa,EAAA;QACvB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;AACpC,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC;;AAEjB,QAAA,MAAM,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAC3E,QAAA,MAAM,cAAc,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACvE,QAAA,OAAO,aAAa,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,CAC5C,GAAG,CAAC,GAAG,IAAG;AACR,YAAA,MAAM,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC;AAC/D,YAAA,IAAI,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,EAAE;gBAC7C;;YAEF,KAAK,CAAC,OAAO,CAAC,CAAC,IAAU,EAAE,KAAa,KAAI;AAC1C,gBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC;AACnC,aAAC,CAAC;SACH,CAAC,CACH;;;AAIK,IAAA,iBAAiB,CAAC,IAAU,EAAA;QAClC,IAAI,CAAC,IAAI,EAAE;AACT,YAAA,OAAO,KAAK;;QAEd,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;AACjC,YAAA,OAAO,KAAK;;AAEd,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;AAC3C,YAAA,OAAO,KAAK;;AAEd,QAAA,OAAO,IAAI;;;AAIL,IAAA,kBAAkB,CAAC,IAAU,EAAA;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACzB,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC;;AAEjB,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,CACpC,GAAG,CAAC,GAAG,IAAG;YACR,IAAI,CAAC,GAAG,EAAE;AACR,gBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;oBACxB,IAAI;oBACJ,KAAK,EAAE,mBAAmB,CAAC;AAC5B,iBAAA,CAAC;;SAEL,CAAC,CACH;;;IAIH,eAAe,CAAC,IAAU,EAAE,KAAK,EAAA;QAC/B,MAAM,IAAI,GAAG,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9C,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE;AAC1C,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/B,YAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAC5B,gBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;;;aAEnB;;YAEL,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;AACrC,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;;;;;AAMjB,IAAA,iBAAiB,CAAC,IAAI,EAAA;AAC5B,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC;QAExF,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;gBACxB,IAAI;gBACJ,KAAK,EAAE,mBAAmB,CAAC;AAC5B,aAAA,CAAC;AACF,YAAA,OAAO,KAAK;;QACb;AAED,QAAA,OAAO,IAAI;;;AAIL,IAAA,mBAAmB,CAAC,KAAa,EAAA;AACvC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC;QAEnG,IAAI,OAAO,EAAE;AACX,YAAA,OAAO,IAAI;;aACN;AACL,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;AACxB,gBAAA,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,mBAAmB,CAAC;AAC5B,aAAA,CAAC;AACF,YAAA,OAAO,KAAK;;;;AAKhB,IAAA,QAAQ,CAAC,IAAU,EAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAA;AACvC,QAAA,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClC,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC;AACtC,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;AACvC,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;AAIzB,IAAA,QAAQ,CAAC,KAAyB,EAAA;AACvC,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK;AAClB,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;AAIhC,IAAA,WAAW,CAAC,IAAU,EAAA;QACpB,IAAK,MAAc,CAAC,OAAO,IAAK,OAAO,OAAO,KAAK,WAAW,EAAE;YAC9D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC;AAC1D,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI;AAC9B,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;aACzB;AACL,YAAA,OAAO,CAAC,IAAI,CAAC,mHAAmH,CAAE;YAClI;;;;AAKJ,IAAA,gBAAgB,CAAC,CAAC,EAAA;QAChB,MAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC;AACpD,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC;;;AAIxD,IAAA,YAAY,CAAC,WAA6B,EAAA;AACxC,QAAA,IAAI,CAAC,kBAAkB,GAAG,SAAS;AACnC,QAAA,IAAI,CAAC,OAAO,GAAG,SAAS;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;AAC9B,QAAA,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC;;;AAI5D,IAAA,kBAAkB,CAAC,IAAsB,EAAA;QACvC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC;AAClE,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;;IAIxB,gBAAgB,CAAC,IAAU,EAAE,QAAgB,EAAA;AACnD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC;QACzF,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,mBAAmB,CAAC,UAAU,EAAC,CAAC;AACxE,YAAA,OAAO,KAAK;;AAEd,QAAA,OAAO,IAAI;;;IAIL,WAAW,CAAC,OAAa,EAAE,WAAmB,EAAA;;AAEpD,QAAA,MAAM,eAAe,GAAY,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AACzG,QAAA,MAAM,oBAAoB,GAAY,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC;QAE5H,IAAI,CAAC,eAAe,EAAE;AACpB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;AACxB,gBAAA,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,mBAAmB,CAAC;AAC5B,aAAA,CAAC;;;QAIJ,IAAI,CAAC,oBAAoB,EAAE;AACzB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;AACxB,gBAAA,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,mBAAmB,CAAC;AAC5B,aAAA,CAAC;;QACH;QAED,OAAO,eAAe,IAAI,oBAAoB;;;IAIzC,YAAY,GAAA;QACjB,MAAM,QAAQ,GAAkB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;QACpE,IAAI,CAAC,QAAQ,EAAE;AACb,YAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC;;AAEvC,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI;AAC1B,QAAA,IAAI,CAAC;AACJ,aAAA,gBAAgB,CAAC,IAAI,CAAC,oBAAoB;AAC1C,aAAA,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC;;;AAI1C,IAAA,aAAa,CAAC,IAAU,EAAA;QAC9B,IAAI,CAAC,IAAI,EAAE;YACT;;QAEF,IAAI,IAAI,CAAC,WAAW,CAAC,IAAY,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAC7C,IAAI,CAAC,QAAQ,CAAC,IAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;;QAE3D,IAAI,CAAC,YAAY,CAAC;AAChB,YAAA,IAAI,EAAE,IAAY;AAClB,YAAA,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC;AACnC,SAAA,CAAC;AACF,QAAA,IAAI,CAAC,cAAc,GAAG,KAAK;AAC3B,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;;8GApYrB,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAL,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,s2BCzChC,41DA2EA,EAAA,MAAA,EAAA,CAAA,u5EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,aAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,YAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,6BAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,eAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;2FDlCa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAP/B,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sBAAsB,EAGf,eAAA,EAAA,uBAAuB,CAAC,MAAM,cACnC,KAAK,EAAA,QAAA,EAAA,41DAAA,EAAA,MAAA,EAAA,CAAA,u5EAAA,CAAA,EAAA;mJAIA,aAAa,EAAA,CAAA;sBAA/B;gBAEkB,UAAU,EAAA,CAAA;sBAA5B;gBAEkB,aAAa,EAAA,CAAA;sBAA/B;gBAEkB,eAAe,EAAA,CAAA;sBAAjC;gBAEkB,SAAS,EAAA,CAAA;sBAA3B;gBAEkB,WAAW,EAAA,CAAA;sBAA7B;gBAEQ,eAAe,EAAA,CAAA;sBAAvB;gBAEQ,aAAa,EAAA,CAAA;sBAArB;gBAEQ,iBAAiB,EAAA,CAAA;sBAAzB;gBAEQ,oBAAoB,EAAA,CAAA;sBAA5B;gBAEQ,YAAY,EAAA,CAAA;sBAApB;gBAEQ,UAAU,EAAA,CAAA;sBAAlB;gBAEQ,WAAW,EAAA,CAAA;sBAAnB;gBAEQ,YAAY,EAAA,CAAA;sBAApB;gBAEQ,YAAY,EAAA,CAAA;sBAApB;gBAEQ,MAAM,EAAA,CAAA;sBAAd;gBAEQ,cAAc,EAAA,CAAA;sBAAtB;gBAEQ,cAAc,EAAA,CAAA;sBAAtB;gBAEQ,oBAAoB,EAAA,CAAA;sBAA5B;gBAEQ,OAAO,EAAA,CAAA;sBAAf;gBAEQ,gBAAgB,EAAA,CAAA;sBAAxB;gBAEQ,QAAQ,EAAA,CAAA;sBAAhB;gBAGQ,gBAAgB,EAAA,CAAA;sBAAxB;gBAGQ,gBAAgB,EAAA,CAAA;sBAAxB;;;ME5EU,cAAc,CAAA;8GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAd,cAAc,EAAA,SAAA,EAAA,CAFb,aAAa,CAAA,EAAA,YAAA,EAAA,CANvB,aAAa;YACb,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAGV,YAAY,CAAA,EAAA,OAAA,EAAA,CADZ,aAAa,CAAA,EAAA,CAAA,CAAA;AAKZ,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAJf,YAAY,CAAA,EAAA,CAAA,CAAA;;2FAIX,cAAc,EAAA,UAAA,EAAA,CAAA;kBAV1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,aAAa;wBACb;AACD,qBAAA;oBACD,OAAO,EAAE,CAAC,aAAa,CAAC;oBACxB,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,SAAS,EAAE,EAAE;oBACb,SAAS,EAAE,CAAC,aAAa,CAAC;AAC3B,iBAAA;;;MCYY,gBAAgB,CAAA;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,iBAVzB,mBAAmB;YACnB,6BAA6B;YAC7B,wBAAwB;YACxB,wBAAwB;YACxB,oBAAoB;AACpB,YAAA,kBAAkB,aATlB,YAAY;AACZ,YAAA,cAAc,aAUN,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAGlB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAFhB,SAAA,EAAA,CAAC,iBAAiB,CAAC,YAZ5B,YAAY;YACZ,cAAc,CAAA,EAAA,CAAA,CAAA;;2FAaL,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAhB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc;AACf,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,mBAAmB;wBACnB,6BAA6B;wBAC7B,wBAAwB;wBACxB,wBAAwB;wBACxB,oBAAoB;wBACpB;AACD,qBAAA;oBACD,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,SAAS,EAAE,CAAC,iBAAiB;AAC9B,iBAAA;;;ACzBD;;AAEG;;ACFH;;AAEG;;;;"}